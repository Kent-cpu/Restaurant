{"ast":null,"code":"var _jsxFileName = \"D:\\\\Restaurant\\\\client\\\\src\\\\pages\\\\Registration.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Card, Container, Form } from \"react-bootstrap\";\nimport { ROLES } from \"../utils/roles\";\nimport { registration } from \"../http/userApi\";\nimport * as Yup from 'yup';\nimport { Formik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Registration = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [role, setRole] = useState(ROLES.USER);\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email('Некорректный адрес электронной почты').required('Обязательное поле'),\n    password: Yup.string().min(6, 'Пароль должен содержать не менее 6 символов').required('Обязательное поле')\n  });\n  const registerUser = async () => {\n    try {\n      const response = await registration(username, password, role);\n      console.log(response);\n      // setUser({\n      //     id: response.id,\n      //     email: response.email,\n      // });\n      // setIsAuth(true);\n      // navigate(MAIN_ROUTE);\n    } catch (e) {\n      // const possibleErrors = e.response.data.errors;\n      // if(possibleErrors.length !== 0) {\n      //     const err = {};\n      //     possibleErrors.forEach(error => err[error.path] = error.msg);\n      //     // setErrors(err);\n      // }\n    }\n  };\n  const handleSubmit = (values, _ref) => {\n    let {\n      setSubmitting\n    } = _ref;\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex justify-content-center align-items-center\",\n    style: {\n      height: window.innerHeight - 60\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: 450\n      },\n      className: \"p-4 border-1\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          username: '',\n          password: ''\n        },\n        onSubmit: handleSubmit,\n        children: _ref2 => {\n          let {\n            values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            className: \"d-flex flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"m-auto mb-4\",\n              children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"d-flex justify-content-center mb-4\",\n              controlId: \"kindOfStand\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"radio\",\n                value: ROLES.USER,\n                \"aria-label\": \"radio 1\",\n                label: \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\",\n                onChange: e => setRole(e.target.value),\n                className: \"pe-4\",\n                checked: role === ROLES.USER\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"radio\",\n                value: ROLES.ADMIN,\n                \"aria-label\": \"radio 2\",\n                label: \"\\u0410\\u0434\\u043C\\u0438\\u043D\\u0438\\u0441\\u0442\\u0440\\u0430\\u0442\\u043E\\u0440\",\n                onChange: e => setRole(e.target.value),\n                checked: role === ROLES.ADMIN\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-5\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                className: \"mb-3\",\n                placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\",\n                name: \"username\",\n                value: values.username,\n                onChange: e => setUsername(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n                name: \"password\",\n                value: values.password,\n                onChange: handleChange,\n                onBlur: handleBlur,\n                isInvalid: touched.password && errors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: registerUser,\n              children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(Registration, \"eas59IOOYee6FBa0Oa8ojHX+/PE=\");\n_c = Registration;\nexport default Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["React","useState","Button","Card","Container","Form","ROLES","registration","Yup","Formik","jsxDEV","_jsxDEV","Registration","_s","username","setUsername","password","setPassword","role","setRole","USER","validationSchema","object","shape","email","string","required","min","registerUser","response","console","log","e","handleSubmit","values","_ref","setSubmitting","setTimeout","alert","JSON","stringify","className","style","height","window","innerHeight","children","width","initialValues","onSubmit","_ref2","errors","touched","handleChange","handleBlur","isSubmitting","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Check","type","value","label","onChange","target","checked","ADMIN","Control","placeholder","name","Feedback","onBlur","isInvalid","onClick","_c","$RefreshReg$"],"sources":["D:/Restaurant/client/src/pages/Registration.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {Button, Card, Container, Form} from \"react-bootstrap\";\r\nimport {ROLES} from \"../utils/roles\";\r\nimport {registration} from \"../http/userApi\";\r\nimport * as Yup from 'yup';\r\nimport {Formik} from \"formik\";\r\n\r\nconst Registration = () => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [role, setRole] = useState(ROLES.USER);\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        email: Yup.string().email('Некорректный адрес электронной почты').required('Обязательное поле'),\r\n        password: Yup.string().min(6, 'Пароль должен содержать не менее 6 символов').required('Обязательное поле'),\r\n    });\r\n\r\n\r\n    const registerUser = async () => {\r\n        try {\r\n            const response = await registration(username, password, role);\r\n            console.log(response)\r\n            // setUser({\r\n            //     id: response.id,\r\n            //     email: response.email,\r\n            // });\r\n            // setIsAuth(true);\r\n            // navigate(MAIN_ROUTE);\r\n        }catch (e) {\r\n            // const possibleErrors = e.response.data.errors;\r\n            // if(possibleErrors.length !== 0) {\r\n            //     const err = {};\r\n            //     possibleErrors.forEach(error => err[error.path] = error.msg);\r\n            //     // setErrors(err);\r\n            // }\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n            alert(JSON.stringify(values, null, 2));\r\n            setSubmitting(false);\r\n        }, 1000);\r\n    };\r\n\r\n\r\n    return (\r\n        <Container\r\n            className=\"d-flex justify-content-center align-items-center\"\r\n            style={{height: window.innerHeight - 60}}\r\n        >\r\n            <Card style={{width: 450}} className=\"p-4 border-1\">\r\n                <Formik\r\n                    initialValues={{username: '', password: ''}}\r\n                    onSubmit={handleSubmit}>\r\n                    {({\r\n                          values,\r\n                          errors,\r\n                          touched,\r\n                          handleChange,\r\n                          handleBlur,\r\n                          handleSubmit,\r\n                          isSubmitting,\r\n                      }) => (\r\n                    <Form className=\"d-flex flex-column\">\r\n                        <h2 className=\"m-auto mb-4\">Регистрация</h2>\r\n                        <Form.Group className=\"d-flex justify-content-center mb-4\" controlId=\"kindOfStand\">\r\n                            <Form.Check\r\n                                type=\"radio\"\r\n                                value={ROLES.USER}\r\n                                aria-label=\"radio 1\"\r\n                                label=\"Пользователь\"\r\n                                onChange={e => setRole(e.target.value)}\r\n                                className=\"pe-4\"\r\n                                checked={role === ROLES.USER}\r\n                            />\r\n\r\n                            <Form.Check\r\n                                type=\"radio\"\r\n                                value={ROLES.ADMIN}\r\n                                aria-label=\"radio 2\"\r\n                                label=\"Администратор\"\r\n                                onChange={e => setRole(e.target.value)}\r\n                                checked={role === ROLES.ADMIN}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-5\">\r\n                            <Form.Control\r\n                                className=\"mb-3\"\r\n                                placeholder=\"Введите имя пользователя\"\r\n                                name=\"username\"\r\n                                value={values.username}\r\n                                onChange={e => setUsername(e.target.value)}\r\n\r\n                            />\r\n\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                {errors.email}\r\n                            </Form.Control.Feedback>\r\n\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"Введите пароль\"\r\n                                name=\"password\"\r\n                                value={values.password}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                isInvalid={touched.password && errors.password}\r\n                            />\r\n\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                {errors.password}\r\n                            </Form.Control.Feedback>\r\n\r\n                        </Form.Group>\r\n\r\n                        <Button onClick={registerUser}>Зарегистрироваться</Button>\r\n                    </Form>\r\n                    )}\r\n                </Formik>\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Registration;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}