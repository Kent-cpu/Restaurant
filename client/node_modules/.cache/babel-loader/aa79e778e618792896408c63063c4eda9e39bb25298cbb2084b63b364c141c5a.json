{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../contexts\";\nconst urlServer = \"https://localhost:7060\";\nfunction x() {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n}\n_s(x, \"JGtbL9nF23m+KDtp3kj55mw9GTc=\");\nconst $host = axios.create({\n  baseURL: urlServer\n});\nconst $authHost = axios.create({\n  baseURL: urlServer\n});\nconst errorHandler = error => {\n  if (error.response && error.response.status === 401) {\n    console.log('Токен просрочен');\n    localStorage.removeItem(\"token\");\n    // Здесь можно добавить логику для уведомления пользователя\n  }\n\n  return Promise.reject(error);\n};\nconst authInterceptor = config => {\n  config.headers.authorization = `Bearer ${localStorage.getItem('token')}`;\n  return config;\n};\n$authHost.interceptors.request.use(authInterceptor);\n$authHost.interceptors.response.use(response => response, errorHandler);\nexport { $host, $authHost };","map":{"version":3,"names":["axios","useContext","AuthContext","urlServer","x","_s","user","$host","create","baseURL","$authHost","errorHandler","error","response","status","console","log","localStorage","removeItem","Promise","reject","authInterceptor","config","headers","authorization","getItem","interceptors","request","use"],"sources":["D:/Restaurant/client/src/http/index.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {useContext} from \"react\";\r\nimport {AuthContext} from \"../contexts\";\r\n\r\nconst urlServer = \"https://localhost:7060\";\r\n\r\nfunction x() {\r\n    const {user} = useContext(AuthContext);\r\n}\r\n\r\nconst $host = axios.create({\r\n    baseURL: urlServer,\r\n});\r\n\r\nconst $authHost = axios.create({\r\n    baseURL: urlServer,\r\n});\r\n\r\nconst errorHandler = (error) => {\r\n    if (error.response && error.response.status === 401) {\r\n        console.log('Токен просрочен');\r\n        localStorage.removeItem(\"token\");\r\n        // Здесь можно добавить логику для уведомления пользователя\r\n    }\r\n    return Promise.reject(error);\r\n};\r\n\r\nconst authInterceptor = config => {\r\n    config.headers.authorization = `Bearer ${localStorage.getItem('token')}`;\r\n    return config;\r\n}\r\n\r\n$authHost.interceptors.request.use(authInterceptor);\r\n$authHost.interceptors.response.use((response) => response, errorHandler);\r\n\r\nexport {\r\n    $host,\r\n    $authHost,\r\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,UAAU,QAAO,OAAO;AAChC,SAAQC,WAAW,QAAO,aAAa;AAEvC,MAAMC,SAAS,GAAG,wBAAwB;AAE1C,SAASC,CAACA,CAAA,EAAG;EAAAC,EAAA;EACT,MAAM;IAACC;EAAI,CAAC,GAAGL,UAAU,CAACC,WAAW,CAAC;AAC1C;AAACG,EAAA,CAFQD,CAAC;AAIV,MAAMG,KAAK,GAAGP,KAAK,CAACQ,MAAM,CAAC;EACvBC,OAAO,EAAEN;AACb,CAAC,CAAC;AAEF,MAAMO,SAAS,GAAGV,KAAK,CAACQ,MAAM,CAAC;EAC3BC,OAAO,EAAEN;AACb,CAAC,CAAC;AAEF,MAAMQ,YAAY,GAAIC,KAAK,IAAK;EAC5B,IAAIA,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACjDC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9BC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAChC;EACJ;;EACA,OAAOC,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC;AAChC,CAAC;AAED,MAAMS,eAAe,GAAGC,MAAM,IAAI;EAC9BA,MAAM,CAACC,OAAO,CAACC,aAAa,GAAI,UAASP,YAAY,CAACQ,OAAO,CAAC,OAAO,CAAE,EAAC;EACxE,OAAOH,MAAM;AACjB,CAAC;AAEDZ,SAAS,CAACgB,YAAY,CAACC,OAAO,CAACC,GAAG,CAACP,eAAe,CAAC;AACnDX,SAAS,CAACgB,YAAY,CAACb,QAAQ,CAACe,GAAG,CAAEf,QAAQ,IAAKA,QAAQ,EAAEF,YAAY,CAAC;AAEzE,SACIJ,KAAK,EACLG,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}